2015 Apr 10

When would you want to create a remote repository rather than keeping all your work locally?

. I would create a remote repository when other developers are working on the project and as a way to back up my project 
- in case my computer crashes.


Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

. If git automatically updated my repository, the new code might break what I am working.
. I could be working on a branch of old software that a special customer needs repaired.


Describe the differences between forks, clones, and branches. When would you use one instead of another?

. A clone is a copy of a repository.
. A branch is new off shoot development done in the same repository. The branch separates for the main line, master. Emperically, developers will more likely merge a branch into master.
. A fork is a new repository, typically stored on GitHub.com. Software developers often modify the code on their forks; they may or may not submit their code back to the parent fork. The parent fork may or may not accept, the modifications.


What is the benefit of having a copy of the last known state of the remote stored locally?

. I can compare my commits to the remote state.
. Locally storing the remote state also helps with merging branches.


How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

If I had to collaborate without using Git or GitHub, I would append a verision number at the end of each file.
Each revision of a file would need to be sent back and forth or pull from a central disk server. 
Each user would have to make sure he/she has the latest version of the file.
The developers would probably test more often and exchange code less often.
